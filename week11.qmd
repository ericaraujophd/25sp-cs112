---
title: "Week 11: BSTs"
# draft: true
# draft-mode: visible
---

## SLOs for Week 11

At the end of this unit, students will be able to...

-   articulate the operations one can do on a Binary Search Tree.
-   understand the implementation of a BST and the algorithms for `insert`, `contains()`, `remove()`, `getHeight()`, the destructor, and the various traversals.
-   reason about the complexity of operations on a BST -- for best and worst cases.
-   describe the algorithm for finding the maximum node in a left subtree and minimum node in a right subtree, for use during the `remove()` algorithm.
-   define what makes a BST **balanced**.
-   AVL trees:
    -   identify an AVL tree as a self-balancing tree.
    -   articulate the importance of the balance factor in determining when the tree needs to be rebalanced.
    -   compute the balance factor for a node.

## Slides, videos, and application exercises

::::: slide-deck
**Week 11: Slides**

::: slides
[Slides](https://docs.google.com/presentation/d/1-QiovhFtewcbIpT3x4bbeZXwb0aUgIa4Sj7Nt1ZC_as/edit?usp=sharing){target="_blank"}
:::

::: reading
No readings for Week 11.
:::
:::::

<!-- ## Lab -->

::::: lab
**Lab 11: Binary Seach Trees**

::: instructions
[Instructions](/labs/lab11.qmd)
:::


::: starter
[Source](){target="_blank"}
:::

```{=html}
<!-- ::: slides
[Slides]()
::: -->
```
:::::

<!-- ## Homework assignments -->

::::: homework
**Project 11: Binary Search Trees**

::: instructions
[Instructions](/projects/proj11.qmd)
:::

::: starter
[Starter](){target="_blank"}
:::
:::::