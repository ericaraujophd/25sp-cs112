---
title: "CS112 - Data Structures"
subtitle: "<br><br> 25SP LABS"
author: "Eric Araújo"
title-slide-attributes:
  data-background-image: /images/slides/pexels-jeshoots-238118.jpg
  data-background-size: contain
  data-background-opacity: "0.3"
# output:
#   xaringan::moon_reader:
#     css: ["../xaringan-themer.css", "../slides.css"]
#     lib_dir: libs
#     nature:
#       ratio: "16:9"
#       highlightLines: true
#       highlightStyle: solarized-light
#       countIncrementalSlides: false
format: 
    revealjs:
        theme: simple
        menu: false
        slide-level: 2
        navigation-mode: linear
        transition: slide
        scrollable: true
        history: false
        logo: /images/calvin-logo.png
        css: slides-style.css
        # simplemenu:
        #     scale: 0.6
        #     barhtml:
        #         header: "<div class='menubar'><a href='../week05.html'>back</a><ul class='menu'></ul></div>"
# revealjs-plugins:
#     - simplemenu
---

## Welcome to CSS112 Labs!

Have a seat, make sure you are booted to **Linux**, and log in with your
Calvin username and passphrase. (ex: abc2 / passphrase)

Find a pair to work with during this lab session.

## About prof. Araújo

:::: {.columns}

::: {.column width="40%"}
![](/images/slides/68B8675F-1A08-466C-A749-D8B7E6B37E95.JPG){fig-alt="." fig-align="left" width="100%"}
:::

::: {.column width="60%"}
Prof. Eric Araújo was born in Brazil, where he was a Professor for 13+ years before joining Calvin University last summer. His research interest lie in Cognitive Modeling. He got his PhD from the VU Amsterdam (The Netherlands), where he met his wife, Amy. Prof. Araújo loves board games, C.S. Lewis and his beloved soccer team, Cruzeiro.
:::

::::


## About prof. Norman

:::: {.columns}

::: {.column width="40%"}
![](/images/slides/me.jpg){fig-alt="." fig-align="left" width="100%"}
:::

::: {.column width="60%"}
Prof. Victor Norman has been teaching CS112 for about 5 years. His research interests lie in Pedagogical best practices and integrating faith and computer science. For fun, he writes code! He also enjoys playing his euphonium in the Calvin Symphonic Band and Burton Street Brass quintent.
:::

::::

## Timeline of the labs

![](/images/slides/lab-timeline.png)


## {background-color="black" background-image="/images/slides/Albert-Einstein.png" background-size="110%"}

:::: {.columns}

::: {.column width="40%"}

:::

::: {.column width="40%" .incremental}
- Whoever invented knockknock jokes...
- Deserves a no-bell prize.
:::
::::

## Pair Programming {.smaller}

You are required to use [Pair Programming]{.underline} techniques.

These techniques are used in Software Engineering industry as best practices for creating higher-quality code with less errors than single-person programming. Plan on working with the same partners for ~3 weeks before we will change partners.

**Basic concept:**

:::{.incremental}
- Person 1 sits at the keyboard and does the typing
- Person 2 tells the person at the keyboard what to type
- Switch after 10-15 minutes.
- Talking tells me this is working. ;) Crickets chirping tells me it isn’t working.
- One person will submit your code for both to Github.
:::

## What else do you need to know...

**Grades:** Your CS112 lab grade is the SAME as your CS112 lecture grade. Prof. Norman and prof. Araújo will give the grade to you at the end of the semester. Everything should be submitted via Github. Labs are due **Thursday** night by 11:59pm. Projects are due **Monday** night by 11.59pm

## What else do you need to know...

**Study Sessions!** Monday and Thursday 7:00pm-9:00pm in SB337 Lab! Upper-class CS/DS students can help with any questions you have on labs, homeworks, etc.

## What else do you need to know...

**Labs** SB354, SB372 and SB337 can be used anytime for lab work and homework if there isn’t a class there! These labs dual boot between Linux and Windows; you will utilize Linux for this class. You may also complete the whole class using your own laptop – see Moodle for setup instructions.

## What else do you need to know...

**Getting to know each other better:** I'm available for a coffee if you want/need to discuss anything related to the course, or soccer, or the weather, or theology, or board games. I mean, feel free to schedule with me to have some time together. Don't be afraid of asking for help if you are struggling with anything.

## {.smaller}

::::{.columns style='align-items: center; display: flex;'}

:::{.column width="50%"}
![](/images/slides/CS112-tutoring.jpg)
:::

:::{.column width="50%"}

Calvin University is committed to offering **free tutoring** for most 100 and 200 level courses. Tutoring is a **weekly one-hour** commitment for the duration of the semester. Tutors at Calvin have been recommended by faculty members, have successfully completed the course, and have completed extensive training on student learning practices provided by the Center for Student Success.
:::
::::

## Academic Integrity {.smaller}

::::{.columns}

:::{.column width="30%"}

![](/images/slides/lab00-integrity.jpg)

:::

:::{.column width="70%"}

**Yes, there is academic integrity in coding! And yes, it is *super* easy for your professors to detect if you copy code from the web. (Remember, some/most of your professors are older than Google. That means we’ve had a LOT of practice finding stuff on the web.)**

Can you use code from the web? Yes. Make sure you cite it appropriately in comments. Do I recommend it? Maybe. If you can’t understand the code that you copy, it may not be wise to use it. You may have unintended consequences for using a bit of code you don’t understand...

:::
::::

## Academic Integrity {.smaller}

::::{.columns}

:::{.column width="30%"}

![](/images/slides/lab00-integrity.jpg)

:::

:::{.column width="70%"}

Overall, all code that is pair programmed should be marked appropriately - the author’s name, email address, and date of programming. You should not claim other author’s code as your own. Appropriately cite any code you take from the web, and make it clear what is your code and what is copied code.

This is especially important for resources such as ChatGPT! Part of using code generated by ChatGPT is linking the source conversation.

**Side note: any code you submit for labs/projects/etc should be able to be 100% understood by yourself and others!**
:::
::::

## Bible Reflection for a Data Structures Lab Session

**Verse:** *"Let all things be done decently and in order."* — 1 Corinthians 14:40

As we dive into the intricacies of data structures, this verse reminds us of the importance of organization and structure, not just in our code but also in life. Data structures like arrays, trees, and graphs teach us that even the most complex systems can be understood and managed when approached with order and clarity.

God’s creation reflects His intentional design—everything has a purpose and place, from the smallest atom to the vastness of the universe. Similarly, in our programming, we use data structures to bring order to chaos, enabling efficiency and clarity in solving problems.

As we work on today’s lab, let us remember that the discipline and creativity we apply to our work reflect the order and purpose God calls us to embody. Let’s strive to build systems that not only function well but also mirror the excellence and intentionality of our Creator.

**Prayer:**
Lord, thank You for the gift of logic and creativity. Help us to approach our work with diligence and clarity, bringing order to our ideas just as You bring order to all creation. May our efforts in this lab glorify You and serve as a reflection of Your wisdom. Amen.

## Lab 9

-   creating recursive functions using ChatGPT
-   discussing efficiency by calculating the number of times a function is called

------------------------------------------------------------------------

------------------------------------------------------------------------